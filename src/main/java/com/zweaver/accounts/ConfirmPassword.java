/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zweaver.accounts;

import com.zweaver.core.CoreGUI;
import com.zweaver.devices.MonitorHandler;
import com.zweaver.dialogue.OKDialogue;
import java.awt.Window;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFrame;
import org.jasypt.util.text.AES256TextEncryptor;

/**
 *
 * @author zach_
 */
public class ConfirmPassword extends javax.swing.JFrame {

    private String enteredUsername;
    private String enteredPassword;
    private JFrame loginForm;
    
    public ConfirmPassword(Window activeWindow, JFrame loginForm, String enteredUsername, String enteredPassword) {
        MonitorHandler.openOnSameMonitor(activeWindow, this);
        this.enteredUsername = enteredUsername;
        this.enteredPassword = enteredPassword;
        this.loginForm = loginForm;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        confirmPasswordButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Please confirm password:");

        confirmPasswordField.setForeground(new java.awt.Color(255, 255, 255));

        confirmPasswordButton.setBackground(new java.awt.Color(102, 153, 255));
        confirmPasswordButton.setForeground(new java.awt.Color(0, 0, 0));
        confirmPasswordButton.setText("OK");
        confirmPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(confirmPasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirmPasswordButton)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordButtonActionPerformed
        if (this.enteredPassword.equals(confirmPasswordField.getText())) {
            // check if user folder exists
            String path = System.getProperty("user.home") + File.separator + "passwordmanager" + File.separator + this.enteredUsername;
            File userFolder = new File(path);
            if (userFolder.exists()) {
                // user already exists
                Window activeWindow = javax.swing.FocusManager.getCurrentManager().getActiveWindow();
                OKDialogue okd = new OKDialogue(activeWindow, "That user already exists.");
            } else {
                // create new folder and login
                userFolder.mkdirs();
                
                // write encrypted password to folder
                AES256TextEncryptor textEncryptor = new AES256TextEncryptor();
                textEncryptor.setPassword(this.enteredUsername);
                String encryptedPassword = textEncryptor.encrypt(this.enteredPassword);
                
                FileWriter configFile;
                try {
                    configFile = new FileWriter(path + File.separator + this.enteredUsername + ".cfg");
                    configFile.write(encryptedPassword);
                    configFile.close();
                } catch (IOException ex) {
                    //Logger.getLogger(ConfirmPassword.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                Window activeWindow = javax.swing.FocusManager.getCurrentManager().getActiveWindow();
                CoreGUI core = new CoreGUI(activeWindow, this.enteredUsername, encryptedPassword);
                this.dispose();
                loginForm.dispose();
            }
        } else {
            Window activeWindow = javax.swing.FocusManager.getCurrentManager().getActiveWindow();
            OKDialogue okd = new OKDialogue(activeWindow, "Passwords do not match, please try again.");
        }
    }//GEN-LAST:event_confirmPasswordButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmPasswordButton;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
